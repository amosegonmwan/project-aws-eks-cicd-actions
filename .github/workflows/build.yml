name: Build, Analyze, Scan

on:
  push:
    branches:
      - main

jobs:
  build-analyze-scan:
    name: Build, Analyze, and Scan
    runs-on: [self-hosted]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 

      - name: Build and analyze with SonarQube
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Install npm dependencies
        run: npm install

      - name: Trivy file scan
        run: trivy fs . > trivyfs.txt

      - name: Docker Build & Push
        run: |
          docker build -t tic-tac-toe .
          docker tag tic-tac-toe amosegonmwan/tic-tac-toe:latest
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker push amosegonmwan/tic-tac-toe:latest
        env:
          DOCKER_CLI_ACI: 1

      - name: Trivy Image scan
        run: trivy image amosegonmwan/tic-tac-toe:latest > trivyimage.txt

  deploy:
    needs: build-analyze-scan
    runs-on: [self-hosted]
    steps:
      - name: Docker pull image
        run: docker pull amosegonmwan/tic-tac-toe:latest

      - name: Image scan
        run: trivy image amosegonmwan/tic-tac-toe:latest > trivyimagedeploy.txt

      - name: Deploy to docker container
        run: docker run -d --name tic-tac-toe -p 3000:3000 amosegonmwan/tic-tac-toe:latest

      - name: Update kubeconfig
        run: aws eks --region us-west-2 update-kubeconfig --name EKS_CLOUD

      - name: Deploy to kubernetes
        run: kubectl apply -f deployment-service.yml

      - name: Send a Slack Notification
        if: always()
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#github-actions-eks'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}